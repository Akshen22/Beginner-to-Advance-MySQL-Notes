
## 1. VARIOUS POSSIBLE WAYS OF INSERTING THE VALUES:

# Pre requisites are DML commands and constraints videos 

# METHOD 1:

insert into emp_person_details 
(id,name,gender,age,family_strength,marital_status,dob)
values
(1, 'Rajesh', 'Male', 20, 6,0,'2002-06-30');

select * from emp_person_details;

# METHOD 2: (MULTIPLE ROW)

INSERT INTO emp_Person_details
VALUES
(2,'RAJ KUMAR','MALE',22,4,0,"2000-08-01"),
(3,'ANKITA','FEMALE',25,6,1,'1997-05-20'),
(4,'ANUPAMA','FEMALE',29,3,1,'1993-04-03'),
(5,'ASHUTOSH','MALE',40,4,1,'1982-02-09');

## TRYING TO INSERT THE DUPLICATE ID --> SEE WHAT WILL HAPPEN IF WE DO THIS



# INSERTING THE VALUES BY SKIPPING SOME COLUMN VALUES (ID,NAME,AGE,MARITAL_STATUS)

INSERT INTO emp_Person_details
(ID,NAME,AGE,MARITAL_STATUS)
VALUES
(6,"DAVID",40,1);

select * from emp_Person_details;

## LET'S INTRODUCING SOME ERRORS BASED ON THE CHECK CONSTRAINTS

insert into emp_Person_details 
(ID,NAME,GENDER,AGE,FAMILY_STRENGTH,MARITAL_STATUS,DOB)
VALUES
(7,'RAJIV','MALE',16,9,0,"2006-08-21");


-- updated age value

insert into emp_Person_details 
(ID,NAME,GENDER,AGE,FAMILY_STRENGTH,MARITAL_STATUS,DOB)
VALUES(7,'RAJIV','MALE',19,9,0,"2004-08-21");

# METHOD 4: USING VALUE INSTEAD OF VALUES

INSERT INTO emp_Person_details
VALUE (8,'RESHU','FEMALE',22,4,1,'2000-01-05');

#INSERT THE RECORDS FOR OTHER TABLES
select * from emp_professional_details;
INSERT INTO 
emp_PROFESSIONAL_DETAILS
(ID,DOJ,ANNUAL_PAY,PROBATION_COMPLETED,
DESIGNATION,PREVIOUS_DESIGNATION,PREVIOUS_YR_EXP)
VALUES 
(1,'2021-07-02',700000,1,'DATA SCIENCE','SOFTWARE ENGINEER',4),
(2,'2020-01-21',650000,1,'DATA ENGINEER','FRONT END DEVELOPER',3),
(3,'2019-06-09',840000,1,'HR MANAGER','HR',6),
(4,'2022-09-01',500000,0,'ASSOCIATE DATA ENGINEER','IT',1);


# IF WE RUN THIS, WE will GET THE ERROR AS THE DATA TYPE CAN ACCEPT 
-- THE VALUES TILL 20 BUT HERE THE ASSOCIATE DATA ENGINEER WORD SEEMS LIKE IT HAS MORE THAN 20 CHARACTERS.


SELECT length('ASSOCIATE DATA ENGINEER') FROM DUAL; # AS WE CAN SEE THAT RESULT IS 23, THUS WE WILL NOT BE ABLE TO INSERT THE VALUE.

# LET'S CHANGE THE DATA TYPE FOR THE DESIGNATION

ALTER TABLE EMP_PROFESSIONAL_DETAILS
CHANGE COLUMN DESIGNATION DESIGNATION CHAR(30); # OR WE CAN ALSO USE VARCHAR IF WE WANT AND WE CAN USE MODIFY COMMAND ALSO TO DO THE SAME CHANGES.



## NOW LET'S RUN THE INSERTION QUERY THAT WEW HAVE WRITTEN ABOVE. I.E

INSERT INTO 
emp_PROFESSIONAL_DETAILS(ID,DOJ,ANNUAL_PAY,PROBATION_COMPLETED,
DESIGNATION,PREVIOUS_DESIGNATION,PREVIOUS_YR_EXP)
VALUES (1,'2021-07-02',700000,1,'DATA SCIENCE','SOFTWARE ENGINEER',4),
(2,'2020-01-21',650000,1,'DATA ENGINEER','FRONT END DEVELOPER',3),
(3,'2019-06-09',840000,1,'HR MANAGER','HR',6),
(4,'2022-09-01',500000,0,'ASSOCIATE DATA ENGINEER','IT',1);

select * from EMP_PROFESSIONAL_DETAILS;


# LET'S INSERT NULL VALUE
# LET'S ASSUME THE EMPLOYEE HAD BEEN FRESHER 

# METHOD 5:
INSERT INTO emp_PROFESSIONAL_DETAILS
VALUES
(5,'2021-01-11',450000,1,'BACK END DEVELOPER',null,0);


## LET'S INSERT THE VALUES FOR THE FINAL TABLE I.E PAYSLIP_DETAILS

DESC EMP_PAYSLIP_DETAILS;

describe EMP_PAYSLIP_DETAILS;

INSERT INTO EMP_PAYSLIP_DETAILS
VALUES
(3,'2021-07-31',40000),
(1,'2021-07-31',52800),
(1,'2021-09-30',54000),
(2,'2020-01-31',10000),
(2,'2020-02-29',45000),
(3,'2021-08-31',41000);

select * from EMP_PAYSLIP_DETAILS;


# 2. VARIOUS METHOD OF DELETING:

# lET'S CHECK THE ROWS BEFORE DELETING THE RECORDS:

SELECT * FROM emp_Person_details;

# LET'S DELETE THE RECORDS WHEREEVER THE EMPLOYEE DATE OF BIRTH IS NOT GIVEN

delete from emp_person_details
where dob is null;


# IF YOU EXECUTE THE ABOVE QUERY YOU WILL GET THE ERROR MESSAGE AS WORKING ON THE SAFE MODE OF SQL.


# Pre-requisite videos are DML and DQL Select command videos.

# LET'S DISABLE THE SAFETY MODE.
SET SQL_SAFE_UPDATES = 0;

# DELETE THE RECORDS NOW

DELETE FROM emp_Person_details WHERE DOB IS NULL;


## LET'S CHECK THE ROWS WHETHER THE ROWS HAVE BEEN DELETED OR NOT.

SELECT * FROM emp_Person_details;

## NOTE WE CAN NOT DIRECTLY DELETE THE ROWS WHICH HAVE PRIMARY AND FOREIGN RELATION SHIP:

## UPDATE THE COLUMN VALUES:

SELECT * FROM emp_PROFESSIONAL_DETAILS;
select * from emp_payslip_details;

# execute with caution.

delete from emp_professional_details where id=3;
delete from emp_payslip_details where id=3;


# LET'S CHANGE THE EMPLOYEE ID 1 NAME TO 'RAJIV VARMA'

update emp_person_details set name='Rajiv varma'
where id=1;
select * from emp_person_details;


## LET'S DELETE THE RECORD WHOSE PROBATION PERIOD IS NOT GET OVER.

select * from emp_professional_details;

delete from emp_professional_details where PROBATION_COMPLETED = 0;

## LET'S SEE HOW TO CHANGE THE MULTIPLE COLUMNS VALUES:


# LET'S UPDATE THE DESIG AS RISK ANALYST AND PREVIOUS EXP AS 1 FOR EMPLOYEE WHOSE ID IS 5

UPDATE emp_PROFESSIONAL_DETAILS
SET PREVIOUS_DESIGNATION = 'RISK ANALYST' , PREVIOUS_YR_EXP = 1
WHERE ID = 5;


## LET'S INCREASE THE CTC BY 30% FOR THOSE WHO ARE WORKING FOR MORE THAN 2 YEARS IN THIS ORGANIZATION.

## This data function will be covered in week 2, but here we are emphasizing the update command. 

UPDATE emp_PROFESSIONAL_DETAILS
SET ANNUAL_PAY = ANNUAL_PAY * 1.30
WHERE ROUND(datediff(CURDATE(),Doj)/365)>2;



# LET'S DISPLAY THE RECORDS
SELECT * FROM emp_PROFESSIONAL_DETAILS;

# LET'S INCREASE THE SALARY BY 10% FOR THOSE WHO WERE WORKING AS ANY 
-- TYPE OF AN ENGINEER PREVIOUSLY AND HAVE PRIOR EXPERIENCE OF LEAST 4 YEAR



UPDATE emp_PROFESSIONAL_DETAILS
SET ANNUAL_PAY = ANNUAL_PAY * 1.10
WHERE PREVIOUS_YR_EXP >=4 AND PREVIOUS_DESIGNATION LIKE '%ENGINEER%';


SELECT * FROM emp_PROFESSIONAL_DETAILS;
